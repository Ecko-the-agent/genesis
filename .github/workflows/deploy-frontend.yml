# .github/workflows/deploy-frontend.yml
name: Deploy Ecko Frontend (Genesis 2.0)

on:
  # --- ΕΝΕΡΓΟΠΟΙΗΣΗ ΜΟΝΟ ΟΤΑΝ ΤΕΛΕΙΩΣΕΙ ΤΟ BACKEND WORKFLOW ---
  workflow_run:
    # Το όνομα του backend workflow ΠΡΕΠΕΙ να ταιριάζει ακριβώς
    workflows: ["Deploy Ecko Backend (Genesis 2.0)"]
    types:
      - completed # Τρέξε μόνο όταν ολοκληρωθεί
    branches: [ main ] # Προαιρετικό: Τρέξε μόνο αν το backend έτρεξε στο main
  # Κρατάμε και το χειροκίνητο trigger
  workflow_dispatch:

jobs:
  deploy_frontend_job:
    # --- ΕΚΤΕΛΕΣΗ ΜΟΝΟ ΑΝ ΤΟ BACKEND WORKFLOW ΠΕΤΥΧΕ ---
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
      actions: read # Απαιτείται για download-artifact από workflow_run
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      # --- Download Artifact from the COMPLETED Backend Workflow Run ---
      - name: Download Backend URL Artifact from triggering run
        uses: actions/download-artifact@v4
        with:
          name: backend-url-artifact # Το όνομα του artifact που ανέβασε το backend
          # Λήψη του artifact από το συγκεκριμένο run που μας ενεργοποίησε
          run-id: ${{ github.event.workflow_run.id }}
          path: . # Λήψη στον τρέχοντα φάκελο

      # --- Checkout code AFTER downloading artifact ---
      # Χρειαζόμαστε τον κώδικα για το sed και το Pages deployment
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Κάνε checkout το commit που ενεργοποίησε το backend run, για συνέπεια
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Inject Backend URL into Javascript
        run: |
          echo "--- Verifying artifact content ---"
          if [ ! -f backend_url.txt ]; then
            echo "Error: backend_url.txt artifact not found from triggering workflow run!" >&2
            exit 1
          fi
          echo "Content of backend_url.txt:"
          cat backend_url.txt
          echo ""
          echo "--- End artifact content ---"

          BACKEND_URL=$(cat backend_url.txt)
          if [ -z "$BACKEND_URL" ]; then
            echo "Error: backend_url.txt is empty!" >&2
            exit 1
          fi

          echo "Value read into BACKEND_URL variable: $BACKEND_URL"
          echo "Running sed command on frontend/ecko_script.js..."
          # Χρήση διαφορετικού delimiter για το sed λόγω πιθανών '/' στο URL
          sed -i "s|__BACKEND_URL_PLACEHOLDER__|$BACKEND_URL|g" frontend/ecko_script.js
          SED_EXIT_CODE=$?
          echo "sed command finished with exit code: $SED_EXIT_CODE"

          if [ $SED_EXIT_CODE -ne 0 ]; then
             echo "ERROR: sed command failed!" >&2
             exit 1
          fi

          echo "Placeholder replacement attempt finished."
          echo "--- Verifying replacement in frontend/ecko_script.js (head of file): ---"
          head -n 15 frontend/ecko_script.js
          echo "--- End verification ---"

      - name: Upload artifact for GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: './frontend'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4