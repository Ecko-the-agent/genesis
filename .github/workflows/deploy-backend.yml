name: Deploy Ecko Backend to GCF

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
      - '.github/workflows/deploy-backend.yml'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write' # Required for ADC authentication

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # Use Workload Identity Federation/ADC (preferred over SA keys)
    - name: Authenticate to Google Cloud
      uses: 'google-github-actions/auth@v2'
      with:
        workload_identity_provider: 'projects/${{ secrets.GCP_WIF_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ secrets.GCP_WIF_POOL }}/providers/${{ secrets.GCP_WIF_PROVIDER }}' # Use WIF details if configured
        service_account: '${{ secrets.GCP_SA_EMAIL }}' # Use Service Account email for WIF
        # --- Fallback to SA Key if WIF is not set up ---
        credentials_json: '${{ secrets.GCP_SA_KEY }}' # Keep this for now as fallback/simplicity

    - name: Set up Cloud SDK
      uses: 'google-github-actions/setup-gcloud@v2'
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    # ---- Deploy ----
    - name: Deploy Cloud Function
      run: |
        # No need to set API keys as env vars when using ADC
        gcloud functions deploy ecko-http-function \
          --gen2 \
          --region=us-central1 \
          --runtime=python311 \
          --memory=512MiB \
          --source=./backend \
          --entry-point=ecko_main \
          --trigger-http \
          --allow-unauthenticated \
          --set-env-vars=GCP_PROJECT=${{ secrets.GCP_PROJECT_ID }} `# Only pass Project ID if needed by code` \
          --max-instances=1

    # ---- Get URL ----
    - name: Get Function URL
      id: get_url
      run: |
        URL=$(gcloud functions describe ecko-http-function --gen2 --region=us-central1 --format='value(serviceConfig.uri)')
        echo "Function URL: $URL"
        echo "url=$URL" >> $GITHUB_OUTPUT