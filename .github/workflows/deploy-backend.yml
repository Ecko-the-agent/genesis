name: Deploy Ecko Backend to GCF

on:
  push:
    branches:
      - main # Trigger deployment on push to main branch
    paths:
      - 'backend/**' # Only run if files in backend/ change
  workflow_dispatch: # Allow manual trigger from GitHub UI

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write' # Required for Workload Identity Federation (preferred) or SA key auth

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}' # Use the Service Account key stored in secrets

    - name: Set up Cloud SDK
      uses: 'google-github-actions/setup-gcloud@v2'

    - name: Deploy Cloud Function
      run: |
        gcloud functions deploy ecko-http-function \
          --gen2 \
          --region=europe-west1 `# Επίλεξε μια περιοχή κοντά σου, π.χ., europe-west1 (Belgium)` \
          --runtime=python312 `# Έλεγξε την τελευταία υποστηριζόμενη έκδοση Python` \
          --source=./backend \
          --entry-point=ecko_main \
          --trigger-http \
          --allow-unauthenticated \
          --set-env-vars=GCP_PROJECT=${{ secrets.GCP_PROJECT_ID }},GEMINI_API_KEY_SECRET_NAME=${{ secrets.GCP_GEMINI_API_KEY_SECRET_NAME }} \
          --max-instances=1 `# Ξεκίνα με 1 για να κρατήσεις το κόστος χαμηλά στο free tier`

    - name: Get Function URL
      id: get_url
      run: |
        URL=$(gcloud functions describe ecko-http-function --gen2 --region=europe-west1 --format='value(serviceConfig.uri)')
        echo "Function URL: $URL"
        echo "url=$URL" >> $GITHUB_OUTPUT

    # Προαιρετικό: Ενημέρωση του frontend/script.js με το URL (Απαιτεί PAT)
    # Αυτό είναι μέρος της "αυτο-τροποποίησης" και θα το ενεργοποιήσουμε αργότερα.
    # - name: Update frontend script with function URL
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Προσωρινά χρησιμοποιούμε το GITHUB_TOKEN, θέλει αλλαγή σε PAT αν χρειάζεται push σε protected branch
    #     FUNCTION_URL: ${{ steps.get_url.outputs.url }}
    #   run: |
    #     echo "Updating script.js with URL: $FUNCTION_URL"
    #     sed -i "s|const ECKO_BACKEND_URL = '.*';|const ECKO_BACKEND_URL = '$FUNCTION_URL';|" frontend/script.js
    #     git config --global user.name 'github-actions[bot]'
    #     git config --global user.email 'github-actions[bot]@users.noreply.github.com'
    #     git add frontend/script.js
    #     git commit -m "Auto-update backend URL in frontend script [skip ci]" || echo "No changes to commit"
    #     git push # Αυτό θα προκαλέσει νέο build, ίσως χρειάζεται προσοχή ή διαφορετική προσέγγιση (π.χ. commit με [skip ci])